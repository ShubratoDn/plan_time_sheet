version: '3.1'
services:
  mysqldb:
    # Currently the latest version is MySQL8.x
    image: mysql:8.4
    container_name: mysqldb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: Timesheet@123
    command:
      --mysql_native_password=on            
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --explicit_defaults_for_timestamp=true
      --lower_case_table_names=1
    ports:
      - 3307:3306
#    volumes:
#      - mc-scrum-data:/var/lib/postgresql/datamc
    networks:
      - scrum-network

    volumes:
      - /25MARCHawss3datapp/Data:/var/lib/mysql
      ### naresh 9/13- ./data:/var/lib/mysql
  # MySQL web client
  adminer:
    image: adminer
    restart: always
    ports:
      - 8089:8080
    networks:
      - scrum-network
  ts-app:
    #The docker file in scrum-app build the jar and provides the docker image with the following name.
    build: ../
    container_name: ts-app-docker-pp

    ports:
      - 8080:8080 # Forward the exposed port 8080 on the container to port 8080 on the host machine
    networks:
      - scrum-network
    volumes:
      - /25MARCHawss3datapp/Filesdata:/User/File/TimeSheet/files/
    links:
      - mysqldb

    #The docker file in scrum-app build the jar and provides the docker image with the following name.
  nginx:

    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - 80:80
      - 443:443
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - nginx.conf:/etc/nginx/nginx.conf:ro

    depends_on:
      - ts-app

    networks:
      - scrum-network

  certbot:

    image: certbot/certbot:latest
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
        #entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - scrum-network

networks:
  scrum-network:
    driver: bridge
    # name: ts-app
